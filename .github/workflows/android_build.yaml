name: Android Build

on:
  workflow_call:
    inputs:
      init_env:
        description: "Init Environment"
        type: string
        required: true
    secrets:
     #! Beginning of EVN file secret
      base_url:
        description: "Base URL for the app"
        required: true
      #! Ending of EVN file secret

      #! Beginning of Build related Secrets
      android_keystore_base64:
        description: "Base64 encoded Android keystore"
        required: true
      android_keystore_password:
        description: "Password for the Android keystore"
        required: true
      android_key_password:
        description: "Password for the Android key"
        required: true
      android_key_alias:
        description: "Alias for the Android key"
        required: true
      firebase_android_app_id:
        description: "Firebase App ID for Android"
        required: true
      firebase_token:
        description: "Firebase token for authentication"
        required: true
      #! Ending of Build related Secrets

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@f2c4f6686ca8e8d6e6d0f28410eeef506ed66aff # pin@v2
    
    - name: Create environment files
      run: |
        # Create the .env file for the specified environment and populate with data
        echo "API_BASE_URL=${{ secrets.base_url }}" > .env.${{ inputs.init_env }}
        
        # Create dummy files for other environments
        for env in development staging production; do
          if [ "$env" != "${{ inputs.init_env }}" ]; then
            echo "API_BASE_URL=dummy" > .env.$env
          fi
        done

    - name: Install dependencies
      run: flutter pub get

    - name: Generate Code
      run: dart run build_runner build -d

    - name: Decrypt and set up keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.android_keystore_base64 }}
      run: |
        echo "$KEYSTORE_BASE64" | base64 --decode > android/app/keystore.jks

    - name: Set up Gradle properties
      run: |
        echo "storePassword=${{ secrets.android_keystore_password }}" >> android/key.properties
        echo "keyPassword=${{ secrets.android_key_password }}" >> android/key.properties
        echo "keyAlias=${{ secrets.android_key_alias }}" >> android/key.properties
        echo "storeFile=keystore.jks" >> android/key.properties

    - name: Build Android APK
      run: |
        flutter build apk --release --flavor ${{ inputs.init_env }} --target lib/main_${{ inputs.init_env }}.dart

    - name: Upload APK to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@a3c833504e7ea073a3ca1c9449b5c9bc36701316 # pin@v1
      with:
        appId: ${{ secrets.firebase_android_app_id }}
        token: ${{ secrets.firebase_token }}
        groups: testers
        file: build/app/outputs/flutter-apk/app-${{ inputs.init_env }}-release.apk
